####################
# Game Rule Events #
####################

namespace = GR

# Remove Titles without De Jure land
character_event = {
	id = GR.1
	desc = EVTDESC_GR_1
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	only_playable = yes
	war = no
	
	trigger = {
		is_merchant_republic = no
		any_demesne_title = {
			higher_tier_than = COUNT
			is_titular = no
			is_landless_type_title = no
			NOR = {
				title = k_papal_state
				title = k_orthodox
			}
			NOT = {
				ROOT = {
					any_realm_title = {
						tier = COUNT
						any_dejure_liege = { title = PREVPREVPREV }
					}
				}
			}
		}
		has_game_rule = {
			name = de_jure_requirement
			value = required
		}
	}
	
	immediate = {
		random_demesne_title = {
			limit = {
				higher_tier_than = COUNT
				is_titular = no
				is_landless_type_title = no
				NOR = {
					title = k_papal_state
					title = k_orthodox
				}
				NOT = {
					ROOT = {
						any_realm_title = {
							tier = COUNT
							any_dejure_liege = { title = PREVPREVPREV }
						}
					}
				}
			}
			save_event_target_as = title_to_destroy
		}
	}
	
	option = {
		name = EVTOPTA_GR_1
		event_target:title_to_destroy = {
			destroy_landed_title = THIS
			add_claim = ROOT
		}
	}
}

# Nomad Realm Instability
character_event = {
	id = GR.10
	hide_window = yes

	only_playable = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "Horse Lords"
		independent = yes
		is_nomadic = yes
		NOT = {
			has_game_rule = {
				name = nomad_stability
				value = stable
			}
		}
	}
	
	immediate = {
		current_heir = {
		  save_event_target_as = nomadic_heir
		}
		any_vassal = {
			character_event = { id = GR.11 }
		}
	}
}

character_event = {
	id = GR.11
	desc = EVTDESC_GR_11
	picture = GFX_evt_horsemanship

	only_playable = yes
	capable_only = yes
	prisoner = no
	min_age = 16
	
	is_triggered_only = yes

	trigger = {
		has_dlc = "Horse Lords"
		liege = {
			independent = yes
			is_nomadic = yes
			in_revolt = no
		}
		in_revolt = no
		independent = no
	}
	
	option = {
		name = EVTOPTA_GR_11 # Remain a vassal
		ai_chance = {
			factor = 100
			modifier = {
				factor = 2
				opinion = {
					who = FROM
					value = 25
				}
			}
			modifier = {
				factor = 2
				opinion = {
					who = FROM
					value = 50
				}
			}
			modifier = {
				factor = 2
				opinion = {
					who = FROM
					value = 75
				}
			}
			modifier = {
				factor = 2
				opinion = {
					who = FROM
					value = 100
				}
			}
			modifier = {
				factor = 2
				liege = {
					NOT = {
						realm_size = 50
					}
				}
			}
			modifier = {
				factor = 3
				is_nomadic = yes
			}
			modifier = {
				factor = 10
				liege = {
					has_landed_title = e_mongol_empire
				}
			}
			modifier = {
				factor = 4
				trait = content
			}
		}
	}
	option = {
		name = EVTOPTB_GR_11 # Go independent
		
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				clan = yes
				OR = {
					has_blood_oath_with = FROM
					is_friend = FROM
				}
			}
			modifier = {
				factor = 2
				clan = yes
				OR = {
					has_feud_with = FROM
					is_rival = FROM
				}
			}
			modifier = {
				factor = 2
				NOT = {
					opinion = {
						who = FROM
						value = -25
					}
				}
			}
			modifier = {
				factor = 2
				NOT = {
					opinion = {
						who = FROM
						value = -50
					}
				}
			}
			modifier = {
				factor = 2
				NOT = {
					opinion = {
						who = FROM
						value = -75
					}
				}
			}
			modifier = {
				factor = 2
				NOT = {
					opinion = {
						who = FROM
						value = -100
					}
				}
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
		}
		
		hidden_tooltip = {
			event_target:nomadic_heir = { character_event = { id = GR.12 days = 1 } }
		}
		
		if = {
			limit = {
				is_nomadic = yes
			}
			any_demesne_title = {
				limit = {
					tier = count
				}
				add_claim = event_target:nomadic_heir
			}
		}
		
		if = {
			limit = {
				is_nomadic = no
			}
			reverse_opinion = {
				who = event_target:nomadic_heir
				modifier = declared_independence_nomad
				years = 50
			}
			hidden_tooltip = {
				any_courtier_or_vassal = {
					limit = {
						dynasty = ROOT
					}
					reverse_opinion = {
						who = event_target:nomadic_heir
						modifier = declared_independence_nomad
						years = 50
					}
				}
			}
		}
		
		liege = {
			any_vassal = {
				limit = {
					in_revolt = yes
					any_war = {
						defender = { character = ROOT }
						attacker = {
							character = THIS			
						}
					}
				}
				set_defacto_liege = THIS
			}
		}
		
		set_defacto_liege = THIS
	}
}

# The liege is notified of the independence
character_event = {
	id = GR.12
	desc = EVTDESC_GR_12
	picture = GFX_evt_emissary

	is_triggered_only = yes
	
	notification = yes
	
	option = {
		name = EVTOPTA_GR_12
	}
	
}

#True cognatic for gender quality rule
character_event = {
	id = GR.13
	hide_window = yes

	ai = no
	only_playable = yes

	is_triggered_only = yes

	trigger = { 
		has_game_rule = { name = gender value = all } 
		is_multiplayer_host_character = yes
		is_save_game = no
	}

	immediate = {
		any_title = {
			limit = { owner = { is_republic = no } }
			add_law = {
				law = true_cognatic_succession
				cooldown = no
				opinion_effect = no
			}
		}
	}
}

character_event = { # Generate 'Fake Family' for characters without any
	id = GR.30
	
	hide_window = yes
	
	is_triggered_only = yes
	
	only_playable = yes
	min_age = 16
	only_men = yes
	
	trigger = {
		OR = {
			AND = {
				ai = yes
				has_game_rule = {
					name = generate_families
					value = ai_only
				}
			}
			has_game_rule = {
				name = generate_families
				value = on
			} 
		}
		is_save_game = no
		OR = {
			is_married = no
			AND = {
				is_married = yes
				num_of_children < 10
				spouse = {
					is_lowborn = yes
				}
			}
		}
		mercenary = no
    	holy_order = no
    	is_landed = yes
		OR = {
			is_feudal = yes
			is_nomadic = yes
			is_tribal = yes
		}
		NOR = {
			government = confucian_bureaucracy
			government = order_government
			trait = eunuch
			trait = celibate
			has_nickname = nick_the_chaste
		}
		OR = {
			NOT = { num_of_dynasty_members = 200 }
			#NOT = {
			#	any_dynasty_member = {
			#		NOR = {
			#			character = ROOT
			#			is_child_of = ROOT
			#		}
			#		is_alive = yes
			#	}
			#}
			NOT = {
				any_close_relative = {
					NOR = {
						character = ROOT
						is_child_of = ROOT
					}
					is_alive = yes
				}
			}
			AND = {
				num_of_children >= 10
				NOT = {
					any_child = {
						mother = { always = yes }
					}
				}
				NOT = {
					any_dynasty_member = {
						NOT = {
							ROOT = {
								is_father = PREV
							}
						}
					}
				}
			}
		}
	}
	
	immediate = {
		
		# Generate a fitting spouse, first and foremost
		# Rulers with really old children might still end up with no mother, but that should be rare
		ROOT = { 
			father_even_if_dead = { save_event_target_as = daddy } 
			mother_even_if_dead = { save_event_target_as = mommy } 
		}
		if = {
			limit = {
				is_married = no
				can_marry = yes
				age >= 44
			}
			set_character_flag = recieved_royal_marriage_aid_duty
			create_character = {
				age = 44
				female = yes
				religion = ROOT
				culture = ROOT
				dynasty = actually_culture
				random_traits = yes
			}
			new_character = {
				add_spouse = ROOT
				save_event_target_as = mother_target
			}
			trigger_switch = {
    			on_trigger = tier
    			EMPEROR = { prestige = 400 }
    			KING = { prestige = 300 }
    			DUKE = { prestige = 200 }
    			COUNT = { prestige = 100 }
    		}
		}
		
		# Then, generate a sort of random amount of children
		if = {
			limit = {
				num_of_children < 1
				age >= 40
			}
			
			random_list = {
				5 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 23
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 23
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 23
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 22
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 23
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 22
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 23
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 22
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 21
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 24
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 23
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 22
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 21
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
			}
		}
		else_if = {
			limit = {
				num_of_children < 1
				age >= 30
			}
			random_list = {
				5 = {
					create_character = {
						age = 13
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 13
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 13
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 12
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 13
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 12
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				5 = {
					create_character = {
						age = 13
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 12
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				5 = {
					create_character = {
						age = 13
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 12
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
			}
		}
		else_if = {
			limit = {
				num_of_children < 1
				age >= 25
			}
			random_list = {
				5 = {
					create_character = {
						age = 18
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 18
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 18
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 17
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				10 = {
					create_character = {
						age = 18
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 17
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				5 = {
					create_character = {
						age = 18
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 17
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 16
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				5 = {
					create_character = {
						age = 18
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 17
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 16
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
			}
		}
		else_if = {
			limit = {
				num_of_children < 1
				age >= 20
			}
			random_list = {
				15 = {
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
       			}
				5 = {
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
			}
		}
		else_if = {
			limit = {
				num_of_children < 1
				age >= 18
			}
			random_list = {
				15 = {
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				5 = {
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 11
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
			}
		}
		else_if = {
			limit = {
				num_of_children < 1
			}
			random_list = {
				18 = {
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = no
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
				2 = {
					create_character = {
						age = 10
						religion = ROOT
						culture = ROOT
						female = yes
					}
					new_character = {
						dynasty = ROOT
						set_father = event_target:daddy
						set_mother = event_target:mommy
					}
				}
			}
		}
		
		# Set orphaned historical children to new mother
		any_child = {
			limit = {
				NOR = {
					mother = { always = no }
					trait = legit_bastard
					trait = bastard
				}
				ROOT = {
					spouse = {
						could_be_parent_of = PREVPREV
					}
				}
			}
			ROOT = {
				spouse = {
					save_event_target_as = new_mother
				}
			}
			set_mother = event_target:new_mother
		}
		
		if = { # Caste fix
			limit = {
				religion = hindu
				trait = kshatriya
			}
			any_child = {
				limit = {
					religion = hindu
					NOT = { trait = kshatriya }
				}
				add_trait = kshatriya
			}
		}
		
		any_child = {
			character_event = { id = RoI.30121 } # Set religious branch to liege's branch
		}
		
		any_child = { # Fix for children not getting any traits
			limit = {
				age = 16
				NOR = {
					has_education_diplomacy_trigger = yes
					has_education_martial_trigger = yes
					has_education_learning_trigger = yes
					has_education_stewardship_trigger = yes
				}
			}
			add_random_education_trait = yes
			random_independent_ruler = {
				limit = {
					PREV = {
						can_copy_personality_trait_from = PREV
					}
				}
				PREV = {
					copy_random_personality_trait = PREV
				}
			}
			random_independent_ruler = {
				limit = {
					PREV = {
						can_copy_personality_trait_from = PREV
					}
				}
				PREV = {
					copy_random_personality_trait = PREV
				}
			}
			random_independent_ruler = {
				limit = {
					PREV = {
						can_copy_personality_trait_from = PREV
					}
				}
				PREV = {
					copy_random_personality_trait = PREV
				}
			}
		}
		
		any_child = {
			limit = {
				age = 10
				NOT = { age = 16 }
				NOT = { personality_traits = 2 }
			}
			random_independent_ruler = {
				limit = {
					PREV = {
						can_copy_personality_trait_from = PREV
					}
				}
				PREV = {
					copy_random_personality_trait = PREV
				}
			}
			random_independent_ruler = {
				limit = {
					PREV = {
						can_copy_personality_trait_from = PREV
					}
				}
				PREV = {
					copy_random_personality_trait = PREV
				}
			}
		}
		
		any_child = {
			limit = {
				age = 6
				NOT = { age = 10 }
				NOT = { personality_traits = 1 }
			}
			random_independent_ruler = {
				limit = {
					PREV = {
						can_copy_personality_trait_from = PREV
					}
				}
				PREV = {
					copy_random_personality_trait = PREV
				}
			}
		}
		recalc_succession = yes
	}
}



